// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(SUB_ADMIN)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  SUB_ADMIN
}

model Model {
  id          Int          @id @default(autoincrement())
  name        String
  age         String
  email       String?      @unique
  phone       String?      @unique
  gender      Gender       @default(FEMALE)
  image       ModelImage[]
  whatsapp    String?
  address     String?
  service     String?
  description String?
  weight      String?
  height      String?
  price       String?
  isActive    Boolean      @default(true)

  booking Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

model ModelImage {
  id      Int   @id @default(autoincrement())
  image   Json?
  modelId Int
  model   Model @relation(fields: [modelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Applicants {
  id       Int     @id @default(autoincrement())
  name     String
  age      String
  email    String? @unique
  phone    String? @unique
  whatsapp String?
  gender   Gender  @default(MALE)
  address  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id           Int     @id @default(autoincrement())
  name         String
  email        String
  userLocation String
  phone        String
  date         String
  time         String
  modelId      Int
  hotelName    String?
  model        Model   @relation(fields: [modelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id              Int     @id @default(autoincrement())
  email           String?
  phone           String?
  whatsapp        String?
  registrationFee String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
